{"ast":null,"code":"var _jsxFileName = \"/Users/gimchaerin/Desktop/archive/week2/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Header from \"./component/Header\";\nimport TodoEditor from \"./component/TodoEditor\";\nimport TodoList from \"./component/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockTodo = [{\n  id: 0,\n  isDone: false,\n  content: \"React 공부하기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 1,\n  isDone: false,\n  content: \"빨래 널기\",\n  createdDate: new Date().getTime()\n}, {\n  id: 2,\n  isDone: false,\n  content: \"노래 연습하기\",\n  createdDate: new Date().getTime()\n}];\nfunction App() {\n  _s();\n  const idRef = useRef(3);\n  const [todo, setTodo] = useState(mockTodo);\n  const onCreate = content => {\n    const newItem = {\n      id: idRef.current,\n      id: 0,\n      content,\n      isDone: false,\n      createdDate: new Date().getTime()\n    };\n    setTodo([newItem, ...todo]);\n    idRef.current += 1;\n  };\n  const onUpdate = targetId => {\n    setTodo(todo.map(it => it.id === targetId ? {\n      ...it,\n      isDone: !it.isDone\n    } : it));\n  };\n  const onDelete = targetId => {\n    setTodo(todo.filter(it => it.id !== targetId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todo: todo,\n      onUpdate: onUpdate,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this);\n}\n_s(App, \"pJPnGOtoqkSqDmEJ6Nq8lF9DMCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","Header","TodoEditor","TodoList","jsxDEV","_jsxDEV","mockTodo","id","isDone","content","createdDate","Date","getTime","App","_s","idRef","todo","setTodo","onCreate","newItem","current","onUpdate","targetId","map","it","onDelete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gimchaerin/Desktop/archive/week2/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Header from \"./component/Header\";\nimport TodoEditor from \"./component/TodoEditor\";\nimport TodoList from \"./component/TodoList\";\n\nconst mockTodo = [\n  {\n    id: 0,\n    isDone: false,\n    content: \"React 공부하기\",\n    createdDate: new Date().getTime(),\n  },\n  {\n    id: 1,\n    isDone: false,\n    content: \"빨래 널기\",\n    createdDate: new Date().getTime(),\n  },\n  {\n    id: 2,\n    isDone: false,\n    content: \"노래 연습하기\",\n    createdDate: new Date().getTime(),\n  },\n];\n\nfunction App() {\n  const idRef = useRef(3);\n  const [todo, setTodo] = useState(mockTodo);\n\n  const onCreate = (content) => {\n        const newItem = {\n          id: idRef.current,\n          id: 0,\n          content,\n          isDone: false,\n          createdDate: new Date().getTime(),\n        };\n        setTodo([newItem, ...todo]);\n        idRef.current += 1;\n      };\n    \n  const onUpdate = (targetId) => {\n      setTodo(\n        todo.map((it) =>\n          it.id === targetId ? { ...it, isDone: !it.isDone } : it\n            )\n          );\n      };\n\n        const onDelete = (targetId) => { \n          setTodo(todo.filter((it) => it.id !== targetId));\n        };\n      \n        return (\n          <div className=\"App\">\n            <Header />\n            <TodoEditor onCreate={onCreate} />\n            <TodoList todo={todo} onUpdate={onUpdate} onDelete={onDelete} />\n          </div>\n        );\n      }\n      export default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAG,CACf;EACEC,EAAE,EAAE,CAAC;EACLC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,YAAY;EACrBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AAClC,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,OAAO;EAChBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AAClC,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,MAAM,EAAE,KAAK;EACbC,OAAO,EAAE,SAAS;EAClBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;AAClC,CAAC,CACF;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,KAAK,GAAGf,MAAM,CAAC,CAAC,CAAC;EACvB,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACO,QAAQ,CAAC;EAE1C,MAAMY,QAAQ,GAAIT,OAAO,IAAK;IACxB,MAAMU,OAAO,GAAG;MACdZ,EAAE,EAAEQ,KAAK,CAACK,OAAO;MACjBb,EAAE,EAAE,CAAC;MACLE,OAAO;MACPD,MAAM,EAAE,KAAK;MACbE,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC;IAClC,CAAC;IACDK,OAAO,CAAC,CAACE,OAAO,EAAE,GAAGH,IAAI,CAAC,CAAC;IAC3BD,KAAK,CAACK,OAAO,IAAI,CAAC;EACpB,CAAC;EAEL,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;IAC3BL,OAAO,CACLD,IAAI,CAACO,GAAG,CAAEC,EAAE,IACVA,EAAE,CAACjB,EAAE,KAAKe,QAAQ,GAAG;MAAE,GAAGE,EAAE;MAAEhB,MAAM,EAAE,CAACgB,EAAE,CAAChB;IAAO,CAAC,GAAGgB,EACnD,CACF,CAAC;EACL,CAAC;EAEC,MAAMC,QAAQ,GAAIH,QAAQ,IAAK;IAC7BL,OAAO,CAACD,IAAI,CAACU,MAAM,CAAEF,EAAE,IAAKA,EAAE,CAACjB,EAAE,KAAKe,QAAQ,CAAC,CAAC;EAClD,CAAC;EAED,oBACEjB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvB,OAAA,CAACJ,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV3B,OAAA,CAACH,UAAU;MAACgB,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA,CAACF,QAAQ;MAACa,IAAI,EAAEA,IAAK;MAACK,QAAQ,EAAEA,QAAS;MAACI,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV;AAAClB,EAAA,CAnCED,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAoCN,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}