{"ast":null,"code":"import React,{useState}from'react';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import Modal from'../../components/Shared/Modal';import'./CartPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function CartPage(_ref){let{cart,setCart,removeFromCart,theme}=_ref;// 모달 상태와 선택된 아이템 상태 관리\nconst[isModalOpen,setIsModalOpen]=useState(false);const[selectedItem,setSelectedItem]=useState(null);// 총 가격 계산 함수\nconst calculateTotalPrice=()=>cart.reduce((total,item)=>total+item.price*item.quantity,0);// 구매 수량 변경 함수 (증가 또는 감소)\nconst updateQuantity=(productId,change)=>{setCart(prevCart=>prevCart.map(item=>item.id===productId&&item.quantity+change>0?{...item,quantity:item.quantity+change}:item));};// \"제거\" 버튼 클릭 시 모달 열기\nconst handleRemoveClick=item=>{setSelectedItem(item);setIsModalOpen(true);};// 모달에서 \"확인\" 버튼 클릭 시 아이템 제거\nconst handleConfirmRemove=()=>{if(selectedItem){removeFromCart(selectedItem.id);// 선택된 아이템 제거\ntoast.success(`${selectedItem.name}이(가) 삭제되었습니다.`);// 성공 알림 표시\n}setIsModalOpen(false);// 모달 닫기\nsetSelectedItem(null);// 선택된 아이템 초기화\n};// \"결제하기\" 버튼 클릭 시 처리\nconst handleCheckout=()=>{if(cart.length===0){toast.error('카트에 상품이 없습니다.');// 에러 알림 표시\nreturn;}// 결제 완료 알림 표시\ntoast.success(`총 결제 금액은 ${calculateTotalPrice().toLocaleString()}원입니다.\\n결제가 완료되었습니다.`);setCart([]);// 카트 초기화\nlocalStorage.removeItem('cart');// localStorage에서도 제거\n};return/*#__PURE__*/_jsxs(\"div\",{className:`cart-page ${theme}`,children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(Modal,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false),onConfirm:handleConfirmRemove,message:`${selectedItem===null||selectedItem===void 0?void 0:selectedItem.name}을(를) 삭제하시겠습니까?`,theme:theme}),/*#__PURE__*/_jsx(\"h1\",{className:\"cart-title\",children:\"CART\"}),cart.length===0?/*#__PURE__*/// 카트가 비어 있을 때 메시지 표시\n_jsx(\"p\",{className:\"empty-cart\",children:\"\\uCE74\\uD2B8\\uC5D0 \\uB2F4\\uAE34 \\uC0C1\\uD488\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"cart-list\",children:cart.map(item=>/*#__PURE__*/_jsxs(\"li\",{className:`cart-item ${theme}`,children:[/*#__PURE__*/_jsx(\"img\",{src:require(`../../assets/images/${item.image}`),alt:item.name,className:\"cart-item-image\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item-details\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"cart-item-name\",children:item.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"cart-item-price\",children:[item.price.toLocaleString(),\"\\uC6D0\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cart-item-quantity\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"quantity-button\",onClick:()=>updateQuantity(item.id,-1),children:\"-\"}),/*#__PURE__*/_jsx(\"span\",{children:item.quantity}),/*#__PURE__*/_jsx(\"button\",{className:\"quantity-button\",onClick:()=>updateQuantity(item.id,1),children:\"+\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"cart-item-description\",children:item.description})]}),/*#__PURE__*/_jsx(\"button\",{className:\"cart-item-remove-button\",onClick:()=>handleRemoveClick(item),children:\"\\uC81C\\uAC70\"})]},item.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"cart-total\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[\"\\uCD1D \\uAC00\\uACA9: \",calculateTotalPrice().toLocaleString(),\"\\uC6D0\"]})}),/*#__PURE__*/_jsx(\"button\",{className:\"checkout-button\",onClick:handleCheckout,children:\"\\uACB0\\uC81C\\uD558\\uAE30\"})]})]});}export default CartPage;","map":{"version":3,"names":["React","useState","ToastContainer","toast","Modal","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CartPage","_ref","cart","setCart","removeFromCart","theme","isModalOpen","setIsModalOpen","selectedItem","setSelectedItem","calculateTotalPrice","reduce","total","item","price","quantity","updateQuantity","productId","change","prevCart","map","id","handleRemoveClick","handleConfirmRemove","success","name","handleCheckout","length","error","toLocaleString","localStorage","removeItem","className","children","isOpen","onClose","onConfirm","message","src","require","image","alt","onClick","description"],"sources":["/Users/gimchaerin/Desktop/shoppingcart/src/pages/CartPage/CartPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Modal from '../../components/Shared/Modal';\nimport './CartPage.css';\n\nfunction CartPage({ cart, setCart, removeFromCart, theme }) {\n  // 모달 상태와 선택된 아이템 상태 관리\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  // 총 가격 계산 함수\n  const calculateTotalPrice = () =>\n    cart.reduce((total, item) => total + item.price * item.quantity, 0);\n\n  // 구매 수량 변경 함수 (증가 또는 감소)\n  const updateQuantity = (productId, change) => {\n    setCart((prevCart) =>\n      prevCart.map((item) =>\n        item.id === productId && (item.quantity + change > 0)\n          ? { ...item, quantity: item.quantity + change }\n          : item\n      )\n    );\n  };\n\n  // \"제거\" 버튼 클릭 시 모달 열기\n  const handleRemoveClick = (item) => {\n    setSelectedItem(item);\n    setIsModalOpen(true);\n  };\n\n  // 모달에서 \"확인\" 버튼 클릭 시 아이템 제거\n  const handleConfirmRemove = () => {\n    if (selectedItem) {\n      removeFromCart(selectedItem.id); // 선택된 아이템 제거\n      toast.success(`${selectedItem.name}이(가) 삭제되었습니다.`); // 성공 알림 표시\n    }\n    setIsModalOpen(false); // 모달 닫기\n    setSelectedItem(null); // 선택된 아이템 초기화\n  };\n\n  // \"결제하기\" 버튼 클릭 시 처리\n  const handleCheckout = () => {\n    if (cart.length === 0) {\n      toast.error('카트에 상품이 없습니다.'); // 에러 알림 표시\n      return;\n    }\n    // 결제 완료 알림 표시\n    toast.success(\n      `총 결제 금액은 ${calculateTotalPrice().toLocaleString()}원입니다.\\n결제가 완료되었습니다.`\n    );\n    setCart([]); // 카트 초기화\n    localStorage.removeItem('cart'); // localStorage에서도 제거\n  };\n\n  return (\n    <div className={`cart-page ${theme}`}>\n      {/* 알림 컨테이너 */}\n      <ToastContainer />\n      {/* 모달 컴포넌트 */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        onConfirm={handleConfirmRemove}\n        message={`${selectedItem?.name}을(를) 삭제하시겠습니까?`}\n        theme={theme}\n      />\n      <h1 className=\"cart-title\">CART</h1>\n      {cart.length === 0 ? (\n        // 카트가 비어 있을 때 메시지 표시\n        <p className=\"empty-cart\">카트에 담긴 상품이 없습니다.</p>\n      ) : (\n        <>\n          {/* 카트 상품 목록 */}\n          <ul className=\"cart-list\">\n            {cart.map((item) => (\n              <li key={item.id} className={`cart-item ${theme}`}>\n                {/* 상품 이미지 */}\n                <img\n                  src={require(`../../assets/images/${item.image}`)}\n                  alt={item.name}\n                  className=\"cart-item-image\"\n                />\n                <div className=\"cart-item-details\">\n                  {/* 상품 이름 */}\n                  <h3 className=\"cart-item-name\">{item.name}</h3>\n                  {/* 상품 가격 */}\n                  <p className=\"cart-item-price\">\n                    {item.price.toLocaleString()}원\n                  </p>\n                  {/* 수량 변경 버튼 */}\n                  <div className=\"cart-item-quantity\">\n                    <button\n                      className=\"quantity-button\"\n                      onClick={() => updateQuantity(item.id, -1)}\n                    >\n                      -\n                    </button>\n                    <span>{item.quantity}</span>\n                    <button\n                      className=\"quantity-button\"\n                      onClick={() => updateQuantity(item.id, 1)}\n                    >\n                      +\n                    </button>\n                  </div>\n                  {/* 상품 설명 */}\n                  <p className=\"cart-item-description\">{item.description}</p>\n                </div>\n                {/* 제거 버튼 */}\n                <button\n                  className=\"cart-item-remove-button\"\n                  onClick={() => handleRemoveClick(item)}\n                >\n                  제거\n                </button>\n              </li>\n            ))}\n          </ul>\n          {/* 총 가격 표시 */}\n          <div className=\"cart-total\">\n            <h2>총 가격: {calculateTotalPrice().toLocaleString()}원</h2>\n          </div>\n          {/* 결제하기 버튼 */}\n          <button className=\"checkout-button\" onClick={handleCheckout}>\n            결제하기\n          </button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default CartPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,cAAc,CAAEC,KAAK,KAAQ,gBAAgB,CACtD,MAAO,uCAAuC,CAC9C,MAAO,CAAAC,KAAK,KAAM,+BAA+B,CACjD,MAAO,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAExB,QAAS,CAAAC,QAAQA,CAAAC,IAAA,CAA2C,IAA1C,CAAEC,IAAI,CAAEC,OAAO,CAAEC,cAAc,CAAEC,KAAM,CAAC,CAAAJ,IAAA,CACxD;AACA,KAAM,CAACK,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACkB,YAAY,CAAEC,eAAe,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAEtD;AACA,KAAM,CAAAoB,mBAAmB,CAAGA,CAAA,GAC1BR,IAAI,CAACS,MAAM,CAAC,CAACC,KAAK,CAAEC,IAAI,GAAKD,KAAK,CAAGC,IAAI,CAACC,KAAK,CAAGD,IAAI,CAACE,QAAQ,CAAE,CAAC,CAAC,CAErE;AACA,KAAM,CAAAC,cAAc,CAAGA,CAACC,SAAS,CAAEC,MAAM,GAAK,CAC5Cf,OAAO,CAAEgB,QAAQ,EACfA,QAAQ,CAACC,GAAG,CAAEP,IAAI,EAChBA,IAAI,CAACQ,EAAE,GAAKJ,SAAS,EAAKJ,IAAI,CAACE,QAAQ,CAAGG,MAAM,CAAG,CAAE,CACjD,CAAE,GAAGL,IAAI,CAAEE,QAAQ,CAAEF,IAAI,CAACE,QAAQ,CAAGG,MAAO,CAAC,CAC7CL,IACN,CACF,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAS,iBAAiB,CAAIT,IAAI,EAAK,CAClCJ,eAAe,CAACI,IAAI,CAAC,CACrBN,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED;AACA,KAAM,CAAAgB,mBAAmB,CAAGA,CAAA,GAAM,CAChC,GAAIf,YAAY,CAAE,CAChBJ,cAAc,CAACI,YAAY,CAACa,EAAE,CAAC,CAAE;AACjC7B,KAAK,CAACgC,OAAO,CAAC,GAAGhB,YAAY,CAACiB,IAAI,eAAe,CAAC,CAAE;AACtD,CACAlB,cAAc,CAAC,KAAK,CAAC,CAAE;AACvBE,eAAe,CAAC,IAAI,CAAC,CAAE;AACzB,CAAC,CAED;AACA,KAAM,CAAAiB,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIxB,IAAI,CAACyB,MAAM,GAAK,CAAC,CAAE,CACrBnC,KAAK,CAACoC,KAAK,CAAC,eAAe,CAAC,CAAE;AAC9B,OACF,CACA;AACApC,KAAK,CAACgC,OAAO,CACX,YAAYd,mBAAmB,CAAC,CAAC,CAACmB,cAAc,CAAC,CAAC,qBACpD,CAAC,CACD1B,OAAO,CAAC,EAAE,CAAC,CAAE;AACb2B,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAE;AACnC,CAAC,CAED,mBACElC,KAAA,QAAKmC,SAAS,CAAE,aAAa3B,KAAK,EAAG,CAAA4B,QAAA,eAEnCtC,IAAA,CAACJ,cAAc,GAAE,CAAC,cAElBI,IAAA,CAACF,KAAK,EACJyC,MAAM,CAAE5B,WAAY,CACpB6B,OAAO,CAAEA,CAAA,GAAM5B,cAAc,CAAC,KAAK,CAAE,CACrC6B,SAAS,CAAEb,mBAAoB,CAC/Bc,OAAO,CAAE,GAAG7B,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEiB,IAAI,gBAAiB,CAC/CpB,KAAK,CAAEA,KAAM,CACd,CAAC,cACFV,IAAA,OAAIqC,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,MAAI,CAAI,CAAC,CACnC/B,IAAI,CAACyB,MAAM,GAAK,CAAC,cAChB;AACAhC,IAAA,MAAGqC,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,8EAAgB,CAAG,CAAC,cAE9CpC,KAAA,CAAAE,SAAA,EAAAkC,QAAA,eAEEtC,IAAA,OAAIqC,SAAS,CAAC,WAAW,CAAAC,QAAA,CACtB/B,IAAI,CAACkB,GAAG,CAAEP,IAAI,eACbhB,KAAA,OAAkBmC,SAAS,CAAE,aAAa3B,KAAK,EAAG,CAAA4B,QAAA,eAEhDtC,IAAA,QACE2C,GAAG,CAAEC,OAAO,CAAC,uBAAuB1B,IAAI,CAAC2B,KAAK,EAAE,CAAE,CAClDC,GAAG,CAAE5B,IAAI,CAACY,IAAK,CACfO,SAAS,CAAC,iBAAiB,CAC5B,CAAC,cACFnC,KAAA,QAAKmC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAEhCtC,IAAA,OAAIqC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEpB,IAAI,CAACY,IAAI,CAAK,CAAC,cAE/C5B,KAAA,MAAGmC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EAC3BpB,IAAI,CAACC,KAAK,CAACe,cAAc,CAAC,CAAC,CAAC,QAC/B,EAAG,CAAC,cAEJhC,KAAA,QAAKmC,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjCtC,IAAA,WACEqC,SAAS,CAAC,iBAAiB,CAC3BU,OAAO,CAAEA,CAAA,GAAM1B,cAAc,CAACH,IAAI,CAACQ,EAAE,CAAE,CAAC,CAAC,CAAE,CAAAY,QAAA,CAC5C,GAED,CAAQ,CAAC,cACTtC,IAAA,SAAAsC,QAAA,CAAOpB,IAAI,CAACE,QAAQ,CAAO,CAAC,cAC5BpB,IAAA,WACEqC,SAAS,CAAC,iBAAiB,CAC3BU,OAAO,CAAEA,CAAA,GAAM1B,cAAc,CAACH,IAAI,CAACQ,EAAE,CAAE,CAAC,CAAE,CAAAY,QAAA,CAC3C,GAED,CAAQ,CAAC,EACN,CAAC,cAENtC,IAAA,MAAGqC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEpB,IAAI,CAAC8B,WAAW,CAAI,CAAC,EACxD,CAAC,cAENhD,IAAA,WACEqC,SAAS,CAAC,yBAAyB,CACnCU,OAAO,CAAEA,CAAA,GAAMpB,iBAAiB,CAACT,IAAI,CAAE,CAAAoB,QAAA,CACxC,cAED,CAAQ,CAAC,GAvCFpB,IAAI,CAACQ,EAwCV,CACL,CAAC,CACA,CAAC,cAEL1B,IAAA,QAAKqC,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBpC,KAAA,OAAAoC,QAAA,EAAI,uBAAM,CAACvB,mBAAmB,CAAC,CAAC,CAACmB,cAAc,CAAC,CAAC,CAAC,QAAC,EAAI,CAAC,CACrD,CAAC,cAENlC,IAAA,WAAQqC,SAAS,CAAC,iBAAiB,CAACU,OAAO,CAAEhB,cAAe,CAAAO,QAAA,CAAC,0BAE7D,CAAQ,CAAC,EACT,CACH,EACE,CAAC,CAEV,CAEA,cAAe,CAAAjC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}